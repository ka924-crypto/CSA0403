#include <fcntl.h>     // for open()
#include <unistd.h>    // for read(), write(), close()
#include <stdio.h>     // for perror()
#include <stdlib.h>    // for exit()

#define BUFFER_SIZE 1024

int main(int argc, char *argv[]) {
    int source_fd, dest_fd;
    char buffer[BUFFER_SIZE];
    ssize_t bytesRead, bytesWritten;

    if (argc != 3) {
        write(STDERR_FILENO, "Usage: ./copy source_file dest_file\n", 37);
        exit(EXIT_FAILURE);
    }

    // Open source file for reading
    source_fd = open(argv[1], O_RDONLY);
    if (source_fd < 0) {
        perror("Error opening source file");
        exit(EXIT_FAILURE);
    }

    // Open (or create) destination file for writing
    dest_fd = open(argv[2], O_WRONLY | O_CREAT | O_TRUNC, 0644);
    if (dest_fd < 0) {
        perror("Error opening/creating destination file");
        close(source_fd);
        exit(EXIT_FAILURE);
    }

    // Read from source and write to destination
    while ((bytesRead = read(source_fd, buffer, BUFFER_SIZE)) > 0) {
        bytesWritten = write(dest_fd, buffer, bytesRead);
        if (bytesWritten != bytesRead) {
            perror("Error writing to destination file");
            close(source_fd);
            close(dest_fd);
            exit(EXIT_FAILURE);
        }
    }

    if (bytesRead < 0) {
        perror("Error reading from source file");
    }

    // Close both files
    close(source_fd);
    close(dest_fd);

    return 0;
}
